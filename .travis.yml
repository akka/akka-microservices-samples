language: scala
services:
  - docker

# make comparing to origin/master work and fetch full history for correct current and previous version detection
git:
  depth: 500

env:
  global:
    - JAVA_HOME=/usr/lib/jvm/adoptopenjdk-11-hotspot-amd64
    - PATH=/usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin:$PATH

addons:
  apt:
    sources:
      # Official debian package for AdoptOpenJDK from https://adoptopenjdk.net/installation.html#linux-pkg
      - sourceline: deb https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ xenial main
        key_url: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    packages:
      - adoptopenjdk-11-hotspot

before_install:
  - java -version

jobs:
  include:
    - stage: test
      script:
        cd docs-source/docs/modules/microservices-tutorial/examples/shopping-analytics-service-scala
        sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping analytics service Scala"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-analytics-service-java
        - mvn test
      name: "Shopping analytics service Java"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping cart service Scala"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-cart-service-java
        - docker-compose up -d
        - mvn test
      name: "Shopping cart service Java"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-order-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping order service Scala"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-order-service-java
        - mvn test
      name: "Shopping order service Java"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/01-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "01 Shopping cart service"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/02-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "02 Shopping cart service"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/03-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "03 Shopping cart service"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/04-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "04 Shopping cart service"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/05-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "05 Shopping cart service"

    - script:
        - cd docs-source/docs/modules/how-to/examples/shopping-cart-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Howto example code"
    - script:
        - cd docs-source/docs/modules/how-to/examples/cleanup-dependencies-project
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Howto cleanup dependencies"

    - script:
        - scripts/copy-identical-files.sh
        - git diff --exit-code --color || { echo "[error] Found modified file that was expected to be identical. Run scripts/copy-identical-files.sh"; false; }
      name: "copy-identical-files"

    - stage: site
      script:
        - make html-author-mode
      name: "Run Antora to create site"

    - stage: publish
      script:
        - scripts/prepare-downloads.sh
        - scripts/deploy-site.sh
      name: "Publish snapshot site"

stages:
  - name: test
    if: NOT tag =~ ^v

  - name: site

  - name: publish
    if: (branch = main AND type = push) AND NOT fork

after_failure:
  - docker-compose logs

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -delete
  - find $HOME/.sbt -name "*.lock" -delete

cache:
  directories:
   - $HOME/.m2
   - $HOME/.ivy2/cache
   - $HOME/.sbt/boot
   - $HOME/.sbt/launchers
   - $HOME/.cache/coursier

# safelist
branches:
  only:
    - main
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
